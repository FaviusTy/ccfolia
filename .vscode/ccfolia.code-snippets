{
	"React Container Component": {
		"scope": "javascript,typescript",
		"prefix": "rcc",
		"body": [
			"import React from 'react'",
			"import { connect } from 'react-redux'",
			"import styled from 'styled-components'",
			"",
			"const ${TM_FILENAME/(.*)\\..+$/$1/} = () => {",
			"  return <Styled.Container>",
			"  </Styled.Container>",
			"}",
			"",
			"const Styled = {}",
			"Styled.Container = styled.div``",
			"",
			"const mapStateToProps = (state) => {",
			"  return {}",
			"}",
			"",
			"const mapDispatchToProps = {",
			"}",
			"",
			"const ${TM_FILENAME/(.*)\\..+$/$1/}Container = ({ ...props }) => {",
			"  return <${TM_FILENAME/(.*)\\..+$/$1/} {...props} />",
			"}",
			"",
			"export default connect(",
			"  mapStateToProps,",
			"  mapDispatchToProps",
			")(${TM_FILENAME/(.*)\\..+$/$1/}Container)",
		],
		"description": "",
	},
	"React Form Container Component": {
		"scope": "javascript,typescript",
		"prefix": "rfcc",
		"body": [
			"import React from 'react'",
			"import { compose } from 'redux'",
			"import { connect } from 'react-redux'",
			"import styled from 'styled-components'",
			"import { withFormik, Form, Field } from 'formik'",
			"import { FormikEffect } from '../modules/formik-effect'",
			"",
			"const ${TM_FILENAME/(.*)\\..+$/$1/} = ({  }) => {",
			"  return <Styled.Container>",
			"    <Form></Form>",
			"  </Styled.Container>",
			"}",
			"",
			"const Styled = {}",
			"Styled.Container = styled.div``",
			"",
			"const mapStateToProps = (state) => {",
			"  return {",
			"  }",
			"}",
			"",
			"const mapDispatchToProps = {",
			"}",
			"",
			"const mapPropsToValues = ({}) => {",
			"}",
			"",
			"const handleSubmit = (values, { props }) => {",
			"}",
			"",
			"const ${TM_FILENAME/(.*)\\..+$/$1/}Container = ({ ...props }) => {",
			"  return <${TM_FILENAME/(.*)\\..+$/$1/} {...props} />",
			"}",
			"",
			"export default compose(",
			"  connect(",
			"    mapStateToProps,",
			"    mapDispatchToProps",
			"  ),",
			"  withFormik({",
			"    mapPropsToValues,",
			"    handleSubmit,",
			"    enableReinitialize: true",
			"  })",
			")(${TM_FILENAME/(.*)\\..+$/$1/}Container)"
		]
	},
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "log",
		"body": [
			"console.log($1)",
			"$2",
		],
		"description": "Log output to console",
	}
}